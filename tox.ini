[flake8]
exclude =
    .git,
    __pycache__,
    .tox,
    .eggs,
    .venv,
    venv,
max-line-length = 120
max-complexity = 10
ignore = D100, D103, C901, W503

[tox]
skipsdist=True
envlist = lint, unit, func
skip_missing_interpreters = True

[testenv]
basepython = python3
relative_files = True 
 

[testenv:unit]
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/tests/unit/requirements.txt
commands =
    pytest -v \
    --cov=jujulint \
    --new-first \
    --last-failed \
    --last-failed-no-failures all \
    --cov-fail-under=100 \
    --cov-report=term-missing \
    --cov-report=xml \
    --cov-report=annotate:tests/unit/report/coverage-annotated \
    --cov-report=html:tests/unit/report/coverage-html \
    --html=tests/unit/report/index.html \
    --junitxml=tests/unit/report/junit.xml \
    --ignore={toxinidir}/tests/functional
setenv = PYTHONPATH={toxinidir}

[testenv:func]
deps = -r{toxinidir}/tests/functional/requirements.txt
passenv =
    JUJULINT_TEST_*
commands =
    pytest -v \
    --log-cli-level=WARNING \
    --ignore={toxinidir}/tests/unit \
    {posargs}

[testenv:func-smoke]
deps =
    {[testenv:func]deps}
    -r{toxinidir}/requirements.txt
commands =
    pytest -v \
    --log-cli-level=WARNING \
    --ignore={toxinidir}/tests/unit \
    -m smoke

[testenv:func-dev]
deps =
    {[testenv:func]deps}
    -r{toxinidir}/requirements.txt
commands =
    pytest -v \
    --log-cli-level=WARNING \
    --ignore={toxinidir}/tests/unit

[testenv:lint]
deps =
    black
    colorama
    flake8
    flake8-colors
    flake8-docstrings
    flake8-html
    isort
    pep8-naming
    pyflakes

commands =
    flake8 --color always
    black --check --diff --color .
    isort --check-only --diff --color .

[testenv:reformat]
deps = {[testenv:lint]deps}
commands =
    black .
    isort .

[pytest]
filterwarnings =
    ignore::DeprecationWarning

[isort]
profile = black
skip_glob =
    .eggs,
    __pycache__,
    .git,
    .tox,
    .venv,
    .build,
    venv,
    dist,
    mod,
    build,

[testenv:dev-environment]
deps =
    pre-commit
    {[testenv:lint]deps}
    {[testenv:unit]deps}
    {[testenv:func]deps}
envdir = {toxinidir}/.venv
commands =
    pre-commit install

[testenv:pre-commit]
deps = {[testenv:dev-environment]deps}
envdir = {[testenv:dev-environment]envdir}
commands =
    pre-commit run -a
